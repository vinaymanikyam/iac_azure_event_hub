name: Terraform

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{secrets.TF_ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.TF_ARM_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.TF_ARM_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.TF_ARM_TENANT_ID}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.0
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
      - name: Terraform Init
        id: init
        run: terraform init -backend-config="subscription_id=${{secrets.TF_ARM_SUBSCRIPTION_ID}}" -backend-config="resource_group_name=${{secrets.TF_STATE_RG}}" -backend-config="storage_account_name=${{secrets.TF_STATE_STORAGE_NAME}}" -backend-config="container-name=${{secrets.TF_STATE_CONTAINER_NAME}}" -backend=config="key=${{secrets.TF_STATE_KEY}}"
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color --var-file=dev.tfvars
        continue-on-error: true
      - name: Terraform Apply
        id: apply
        if: github.event_name == 'pull_request'
        run: terraform apply -no-color --var-file=dev.tfvars
        continue-on-error: true